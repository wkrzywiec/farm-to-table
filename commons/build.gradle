plugins {
    id 'idea'
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'groovy'
    id 'jacoco'
    id "org.barfuin.gradle.jacocolog" version "3.0.0-RC2"
}

group = 'io.wkrzywiec'
version = '0.0.1-SNAPSHOT'
description = 'food-delivery common libraries'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {

    def springBootVersion = '2.7.1'
    def lombokVersion = '1.18.24'
    def spockVersion = '2.1-groovy-3.0'
    def testcontainersVersion = '1.17.3'

    implementation "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.3'
    implementation "org.springframework.boot:spring-boot-starter-data-redis:${springBootVersion}"

    implementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    implementation "org.spockframework:spock-core:${spockVersion}"
    implementation "org.spockframework:spock-spring:${spockVersion}"
    implementation 'org.codehaus.groovy:groovy-all:3.0.11'
    implementation 'io.rest-assured:spring-mock-mvc:4.4.0'
    implementation "org.testcontainers:spock:${testcontainersVersion}"
}

test {
    useJUnitPlatform()
}

sourceSets {
    integrationTest {
        groovy.srcDir "$projectDir/src/integration-test/groovy"
        resources.srcDir "$projectDir/src/integration-test/resources"
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    useJUnitPlatform()
}

check.dependsOn integrationTest

jacocoTestReport {
    reports {
        xml.required = true
    }
    dependsOn = [
            'test',
            'integrationTest'
    ]
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.0
            }
        }
    }
}
