name: Java Gradle - build an app

on:
  workflow_call:
    inputs:
      java-version:
        description: Java version that will be used to build an app
        default: '17'
        required: false
        type: string
      jdk-distribution:
        description: Java distribution used to build an app
        default: 'temurin'
        required: false
        type: string
      app-name:
        description: Project name
        required: true
        type: string
      path:
        description: Path to the root folder of a Gradle project
        default: '.'
        required: false
        type: string
    secrets:
      sonarToken:
        required: false
      githubToken:
        required: false
      snykToken:
        required: false

jobs:
  qa:
    name: ${{ inputs.app-name }} - Build & test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: ${{ inputs.jdk-distribution }}
          java-version: ${{ inputs.java-version }}

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build 🏗️ & unit test app 🧪
        run: |
          chmod +x ${{ inputs.path }}/gradlew
          ${{ inputs.path }}/gradlew clean check --info

      - name: Test report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: JUnit Tests
          path: ${{ inputs.path }}/build/test-results/test/TEST-*.xml
          reporter: java-junit

      - name: Generate test coverage report 🔎
        run: |
          ${{ inputs.path }}/gradlew jacocoTestReport --info

      - name: Sonar Cloud 🌟
        run: |
          ${{ inputs.path }}/gradlew sonarqube -Dsonar.host.url=https://sonarcloud.io -Dsonar.verbose=true --info
        env:
          GITHUB_TOKEN: ${{ secrets.githubToken }}
          SONAR_TOKEN: ${{ secrets.sonarToken }}


  security:
    name: ${{ inputs.app-name }} - Security scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Gradlew permissions
        run: |
          chmod +x ${{ inputs.path }}/gradlew

      - name: Run Snyk & upload to results to the cloud
        uses: snyk/actions/gradle-jdk17@master
        env:
          SNYK_TOKEN: ${{ secrets.snykToken }}
        with:
          command: monitor

      - name: Run Snyk to check for vulnerabilities 👮‍♀️
        uses: snyk/actions/gradle-jdk17@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.snykToken }}
        with:
          args: --severity-threshold=high --sarif-file-output=snyk.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif


