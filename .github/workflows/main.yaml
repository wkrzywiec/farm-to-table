name: Build
on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_dispatch:

env:
  jdk_distribution: 'temurin'
  java_version: '17'

jobs:
  bff:
    uses: ./.github/workflows/template-gradle-project-main.yaml
    with:
      app-name: bff
      java-version: ${{ env.java_version }}
      jdk-distribution: ${{ env.jdk_distribution }}

  delivery:
    uses: ./.github/workflows/template-gradle-project-main.yaml
    with:
      app-name: delivery
      java-version: ${{ env.java_version }}
      jdk-distribution: ${{ env.jdk_distribution }}

  food:
    uses: ./.github/workflows/template-gradle-project-main.yaml
    with:
      app-name: food
      java-version: ${{ env.java_version }}
      jdk-distribution: ${{ env.jdk_distribution }}

  ordering:
    uses: ./.github/workflows/template-gradle-project-main.yaml
    with:
      app-name: ordering
      java-version: ${{ env.java_version }}
      jdk-distribution: ${{ env.jdk_distribution }}


  snyk:
    runs-on: ubuntu-latest
    needs: [bff, delivery, food, ordering]
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Gradlew permissions
        working-directory: services
        run: |
          chmod +x ./gradlew

      - name: Run Snyk & upload to results to the cloud
        uses: snyk/actions/gradle-jdk17@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor --file=services/build.gradle --all-sub-projects

      - name: Run Snyk to check for vulnerabilities üëÆ‚Äç‚ôÄÔ∏è
        uses: snyk/actions/gradle-jdk17@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --sarif-file-output=snyk.sarif --file=services/build.gradle --all-sub-projects

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  sonar:
    runs-on: ubuntu-latest
    needs: [bff, delivery, food, ordering]
    steps:

      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: ${{ env.jdk_distribution }}
          java-version: ${{ env.java_version }}

      - name: Set permissions for gradlew
        working-directory: services
        run: |
          chmod +x ./gradlew

      - name: Sonar Cloud üåü
        working-directory: services
        run: |
          ./gradlew sonarqube -Dsonar.host.url=https://sonarcloud.io -Dsonar.verbose=true --info
        env:
          GITHUB_TOKEN: ${{ secrets.githubToken }}
          SONAR_TOKEN: ${{ secrets.sonarToken }}
