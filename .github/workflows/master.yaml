name: master
on:
  push:
    branches:
      - 'master'
    paths:
      - 'services/**'
  pull_request:
  workflow_dispatch:

jobs:
  bff:
    uses: ./.github/workflows/template-gradle-master.yaml
    with:
      app-name: bff
    secrets:
      sonarToken: ${{ secrets.BFF_SONAR_TOKEN }}

  commons:
    uses: ./.github/workflows/template-gradle-master.yaml
    with:
      app-name: commons
    secrets:
      sonarToken: ${{ secrets.BFF_SONAR_TOKEN }}

  delivery:
    uses: ./.github/workflows/template-gradle-master.yaml
    with:
      app-name: delivery
    secrets:
      sonarToken: ${{ secrets.DELIVERY_SONAR_TOKEN }}

  food:
    uses: ./.github/workflows/template-gradle-master.yaml
    with:
      app-name: food
    secrets:
      sonarToken: ${{ secrets.FOOD_SONAR_TOKEN }}

  ordering:
    uses: ./.github/workflows/template-gradle-master.yaml
    with:
      app-name: ordering
    secrets:
      sonarToken: ${{ secrets.ORDERING_SONAR_TOKEN }}

  ui:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to the repository
        uses: actions/checkout@v3

      - name: Set up NodeJS environment
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install package dependencies
        working-directory: services/ui
        run: npm install

      - name: Create test build
        working-directory: services/ui
        run: npm run build

      - name: Sonar Cloud üåü
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: services/ui
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.UI_SONAR_TOKEN }}

  snyk:
    runs-on: ubuntu-latest
    needs: [bff, commons, delivery, food, ordering, ui]
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Gradlew permissions
        working-directory: services
        run: |
          chmod +x ./gradlew

      - name: Gradle - Run Snyk & upload to results to the cloud
        uses: snyk/actions/gradle-jdk17@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor --file=services/build.gradle --all-sub-projects

      - name: Set up NodeJS environment
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install package dependencies
        working-directory: services/ui
        run: npm install

      - name: Node - Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=node/snyk.sarif --file=services/ui/package.json

      - name: Node - Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: node/snyk.sarif
