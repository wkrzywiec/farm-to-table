plugins {
    id 'idea'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.liquibase.gradle' version '2.1.1'
    id 'java'
    id 'groovy'
    id 'jacoco'
    id "org.barfuin.gradle.jacocolog" version "3.0.0-RC2"
    id 'org.sonarqube' version "6.0.0.5145"
}

group = 'io.wkrzywiec'
version = '0.0.1-SNAPSHOT'
description = 'food-delivery backend for frontend'
sourceCompatibility = '21'

def activeDevProfiles = 'dev,redis'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {

    def lombokVersion = '1.18.36'
    def spockVersion = '2.4-M5-groovy-4.0'
    def testcontainersVersion = '1.20.6'

    implementation "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation project(':commons')
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'com.github.sonus21:rqueue-spring-boot-starter:3.2.0-RELEASE'
    implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'
    implementation 'io.vavr:vavr:0.10.6'
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    implementation 'com.google.code.gson:gson:2.12.1'
    implementation 'com.redislabs:lettusearch:3.1.2'
    implementation 'com.redislabs:spring-redisearch:3.1.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation "org.spockframework:spock-core:${spockVersion}"
    implementation "org.spockframework:spock-spring:${spockVersion}"
    implementation ('com.github.javafaker:javafaker:1.0.2') { exclude module: 'snakeyaml' }
    implementation 'org.yaml:snakeyaml:2.4'
    testImplementation 'org.apache.groovy:groovy-all:4.0.26'
    testImplementation ('io.rest-assured:spring-mock-mvc:5.5.1') { exclude group: 'org.codehaus.groovy' }

    testImplementation "org.testcontainers:spock:${testcontainersVersion}"
    testImplementation "org.testcontainers:postgresql:${testcontainersVersion}"
    testImplementation 'org.awaitility:awaitility:4.3.0'
}

bootRun {
    args = ["--spring.profiles.active=" + activeDevProfiles]
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
    }
    dependsOn = [
            'test'
    ]
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
//                todo: work on test coverage
                minimum = 0.1
            }
        }
    }
}

sonarqube {
    properties {
        property 'sonar.projectName', 'BFF - Farm-to-Table app'
        property "sonar.projectKey", "farm-to-table-app_bff"
        property "sonar.organization", "farm-to-table-app"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

repositories {
    mavenCentral()
}