services:

  ui:
    container_name: ui
    build:
      context: .
      dockerfile: Dockerfile.ui
    ports:
      - 80:80
    depends_on:
      - bff

  bff:
    container_name: bff
    build:
      context: .
      dockerfile: Dockerfile.backend
      args:
        app_name: bff
    env_file: .env
    ports:
      - 8081:8080
    depends_on:
      - redis

  food:
    container_name: food
    build:
      context: .
      dockerfile: Dockerfile.backend
      args:
        app_name: food
    env_file: .env
    ports:
      - 8084:8080
    depends_on:
      - redis

  ordering:
    container_name: ordering
    build:
      context: .
      dockerfile: Dockerfile.backend
      args:
        app_name: ordering
    env_file: .env
    ports:
      - 8082:8080
    depends_on:
      - redis

  delivery:
    container_name: delivery
    build:
      context: .
      dockerfile: Dockerfile.backend
      args:
        app_name: delivery
    env_file: .env
    ports:
      - 8083:8080
    depends_on:
      - redis

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    command: [ "postgres", "-c", "log_statement=all" ]
    volumes:
      - postgres:/var/lib/postgres/data
      - ./infra/postgres:/docker-entrypoint-initdb.d

  pgadmin:
    image: dpage/pgadmin4:7.4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - 5050:80
    depends_on:
      - postgres
    volumes:
      - ./infra/pgadmin/server.json:/pgadmin4/servers.json

  redis:
    image: redis/redis-stack:latest
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379
      - 8181:8001
    volumes:
      - redis-data:/data

volumes:
  postgres:
  redis-data: