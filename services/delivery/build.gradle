plugins {
	id 'idea'
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'groovy'
	id 'jacoco'
	id "org.barfuin.gradle.jacocolog" version "3.0.0-RC2"
	id 'org.sonarqube' version "4.2.0.3129"
}

group = 'io.wkrzywiec'
version = '0.0.1-SNAPSHOT'
description = 'farm-to-table delivery domain'
sourceCompatibility = '17'

def activeDevProfiles = 'dev,redis'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {

	def lombokVersion = '1.18.24'
	def spockVersion = '2.3-groovy-4.0'
	def testcontainersVersion = '1.17.3'

	implementation "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	implementation project(':commons')
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'io.vavr:vavr:0.10.4'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'com.google.code.gson:gson:2.9.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation "org.spockframework:spock-core:${spockVersion}"
	implementation "org.spockframework:spock-spring:${spockVersion}"
	testImplementation 'org.apache.groovy:groovy-all:4.0.13'
	testImplementation 'io.rest-assured:spring-mock-mvc:5.3.1'
	implementation ('com.github.javafaker:javafaker:1.0.2') { exclude module: 'snakeyaml' }
	implementation group: 'org.yaml', name: 'snakeyaml', version: '1.30'

	testImplementation "org.testcontainers:spock:${testcontainersVersion}"

	//this part is needed, because io.rest-assured:spring-mock-mvc depends on old lib for groovy - org.codehaus.groovy:groovy
	modules {
		module("org.codehaus.groovy:groovy") {
			replacedBy("org.apache.groovy:groovy", "conflicts in current rest-assured version")
		}

		module("org.codehaus.groovy:groovy-xml") {
			replacedBy("org.apache.groovy:groovy-xml", "conflicts in current rest-assured version")
		}

		module("org.codehaus.groovy:groovy-json") {
			replacedBy("org.apache.groovy:groovy-json", "conflicts in current rest-assured version")
		}
	}
}

bootRun {
	args = ["--spring.profiles.active=" + activeDevProfiles]
}

test {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.required = true
	}
	dependsOn = [
	        'test'
	]
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
//                todo: work on test coverage
				minimum = 0.1
			}
		}
	}
}

sonarqube {
	properties {
		property 'sonar.projectName', 'delivery'
		property "sonar.projectKey", "farm-to-table-app_delivery"
		property "sonar.organization", "farm-to-table-app"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}
